// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: transition.proto

#ifndef PROTOBUF_transition_2eproto__INCLUDED
#define PROTOBUF_transition_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/timestamp.pb.h>
// @@protoc_insertion_point(includes)

namespace ddrl {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_transition_2eproto();
void protobuf_AssignDesc_transition_2eproto();
void protobuf_ShutdownFile_transition_2eproto();

class enb_transition;
class ue_transition;

// ===================================================================

class ue_transition : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ddrl.ue_transition) */ {
 public:
  ue_transition();
  virtual ~ue_transition();

  ue_transition(const ue_transition& from);

  inline ue_transition& operator=(const ue_transition& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ue_transition& default_instance();

  void Swap(ue_transition* other);

  // implements Message ----------------------------------------------

  inline ue_transition* New() const { return New(NULL); }

  ue_transition* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ue_transition& from);
  void MergeFrom(const ue_transition& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ue_transition* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 rnti = 1;
  void clear_rnti();
  static const int kRntiFieldNumber = 1;
  ::google::protobuf::uint32 rnti() const;
  void set_rnti(::google::protobuf::uint32 value);

  // optional uint32 id = 2;
  void clear_id();
  static const int kIdFieldNumber = 2;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // optional float reward = 3;
  void clear_reward();
  static const int kRewardFieldNumber = 3;
  float reward() const;
  void set_reward(float value);

  // repeated float state = 4;
  int state_size() const;
  void clear_state();
  static const int kStateFieldNumber = 4;
  float state(int index) const;
  void set_state(int index, float value);
  void add_state(float value);
  const ::google::protobuf::RepeatedField< float >&
      state() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_state();

  // repeated float action = 5;
  int action_size() const;
  void clear_action();
  static const int kActionFieldNumber = 5;
  float action(int index) const;
  void set_action(int index, float value);
  void add_action(float value);
  const ::google::protobuf::RepeatedField< float >&
      action() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_action();

  // repeated float next_state = 6;
  int next_state_size() const;
  void clear_next_state();
  static const int kNextStateFieldNumber = 6;
  float next_state(int index) const;
  void set_next_state(int index, float value);
  void add_next_state(float value);
  const ::google::protobuf::RepeatedField< float >&
      next_state() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_next_state();

  // @@protoc_insertion_point(class_scope:ddrl.ue_transition)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 rnti_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::RepeatedField< float > state_;
  mutable int _state_cached_byte_size_;
  ::google::protobuf::RepeatedField< float > action_;
  mutable int _action_cached_byte_size_;
  ::google::protobuf::RepeatedField< float > next_state_;
  mutable int _next_state_cached_byte_size_;
  float reward_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_transition_2eproto();
  friend void protobuf_AssignDesc_transition_2eproto();
  friend void protobuf_ShutdownFile_transition_2eproto();

  void InitAsDefaultInstance();
  static ue_transition* default_instance_;
};
// -------------------------------------------------------------------

class enb_transition : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ddrl.enb_transition) */ {
 public:
  enb_transition();
  virtual ~enb_transition();

  enb_transition(const enb_transition& from);

  inline enb_transition& operator=(const enb_transition& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const enb_transition& default_instance();

  void Swap(enb_transition* other);

  // implements Message ----------------------------------------------

  inline enb_transition* New() const { return New(NULL); }

  enb_transition* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const enb_transition& from);
  void MergeFrom(const enb_transition& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(enb_transition* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 tti = 1;
  void clear_tti();
  static const int kTtiFieldNumber = 1;
  ::google::protobuf::uint64 tti() const;
  void set_tti(::google::protobuf::uint64 value);

  // optional .google.protobuf.Timestamp timestamp = 2;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 2;
  const ::google::protobuf::Timestamp& timestamp() const;
  ::google::protobuf::Timestamp* mutable_timestamp();
  ::google::protobuf::Timestamp* release_timestamp();
  void set_allocated_timestamp(::google::protobuf::Timestamp* timestamp);

  // repeated .ddrl.ue_transition transition = 3;
  int transition_size() const;
  void clear_transition();
  static const int kTransitionFieldNumber = 3;
  const ::ddrl::ue_transition& transition(int index) const;
  ::ddrl::ue_transition* mutable_transition(int index);
  ::ddrl::ue_transition* add_transition();
  ::google::protobuf::RepeatedPtrField< ::ddrl::ue_transition >*
      mutable_transition();
  const ::google::protobuf::RepeatedPtrField< ::ddrl::ue_transition >&
      transition() const;

  // @@protoc_insertion_point(class_scope:ddrl.enb_transition)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 tti_;
  ::google::protobuf::Timestamp* timestamp_;
  ::google::protobuf::RepeatedPtrField< ::ddrl::ue_transition > transition_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_transition_2eproto();
  friend void protobuf_AssignDesc_transition_2eproto();
  friend void protobuf_ShutdownFile_transition_2eproto();

  void InitAsDefaultInstance();
  static enb_transition* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// ue_transition

// optional uint32 rnti = 1;
inline void ue_transition::clear_rnti() {
  rnti_ = 0u;
}
inline ::google::protobuf::uint32 ue_transition::rnti() const {
  // @@protoc_insertion_point(field_get:ddrl.ue_transition.rnti)
  return rnti_;
}
inline void ue_transition::set_rnti(::google::protobuf::uint32 value) {
  
  rnti_ = value;
  // @@protoc_insertion_point(field_set:ddrl.ue_transition.rnti)
}

// optional uint32 id = 2;
inline void ue_transition::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 ue_transition::id() const {
  // @@protoc_insertion_point(field_get:ddrl.ue_transition.id)
  return id_;
}
inline void ue_transition::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:ddrl.ue_transition.id)
}

// optional float reward = 3;
inline void ue_transition::clear_reward() {
  reward_ = 0;
}
inline float ue_transition::reward() const {
  // @@protoc_insertion_point(field_get:ddrl.ue_transition.reward)
  return reward_;
}
inline void ue_transition::set_reward(float value) {
  
  reward_ = value;
  // @@protoc_insertion_point(field_set:ddrl.ue_transition.reward)
}

// repeated float state = 4;
inline int ue_transition::state_size() const {
  return state_.size();
}
inline void ue_transition::clear_state() {
  state_.Clear();
}
inline float ue_transition::state(int index) const {
  // @@protoc_insertion_point(field_get:ddrl.ue_transition.state)
  return state_.Get(index);
}
inline void ue_transition::set_state(int index, float value) {
  state_.Set(index, value);
  // @@protoc_insertion_point(field_set:ddrl.ue_transition.state)
}
inline void ue_transition::add_state(float value) {
  state_.Add(value);
  // @@protoc_insertion_point(field_add:ddrl.ue_transition.state)
}
inline const ::google::protobuf::RepeatedField< float >&
ue_transition::state() const {
  // @@protoc_insertion_point(field_list:ddrl.ue_transition.state)
  return state_;
}
inline ::google::protobuf::RepeatedField< float >*
ue_transition::mutable_state() {
  // @@protoc_insertion_point(field_mutable_list:ddrl.ue_transition.state)
  return &state_;
}

// repeated float action = 5;
inline int ue_transition::action_size() const {
  return action_.size();
}
inline void ue_transition::clear_action() {
  action_.Clear();
}
inline float ue_transition::action(int index) const {
  // @@protoc_insertion_point(field_get:ddrl.ue_transition.action)
  return action_.Get(index);
}
inline void ue_transition::set_action(int index, float value) {
  action_.Set(index, value);
  // @@protoc_insertion_point(field_set:ddrl.ue_transition.action)
}
inline void ue_transition::add_action(float value) {
  action_.Add(value);
  // @@protoc_insertion_point(field_add:ddrl.ue_transition.action)
}
inline const ::google::protobuf::RepeatedField< float >&
ue_transition::action() const {
  // @@protoc_insertion_point(field_list:ddrl.ue_transition.action)
  return action_;
}
inline ::google::protobuf::RepeatedField< float >*
ue_transition::mutable_action() {
  // @@protoc_insertion_point(field_mutable_list:ddrl.ue_transition.action)
  return &action_;
}

// repeated float next_state = 6;
inline int ue_transition::next_state_size() const {
  return next_state_.size();
}
inline void ue_transition::clear_next_state() {
  next_state_.Clear();
}
inline float ue_transition::next_state(int index) const {
  // @@protoc_insertion_point(field_get:ddrl.ue_transition.next_state)
  return next_state_.Get(index);
}
inline void ue_transition::set_next_state(int index, float value) {
  next_state_.Set(index, value);
  // @@protoc_insertion_point(field_set:ddrl.ue_transition.next_state)
}
inline void ue_transition::add_next_state(float value) {
  next_state_.Add(value);
  // @@protoc_insertion_point(field_add:ddrl.ue_transition.next_state)
}
inline const ::google::protobuf::RepeatedField< float >&
ue_transition::next_state() const {
  // @@protoc_insertion_point(field_list:ddrl.ue_transition.next_state)
  return next_state_;
}
inline ::google::protobuf::RepeatedField< float >*
ue_transition::mutable_next_state() {
  // @@protoc_insertion_point(field_mutable_list:ddrl.ue_transition.next_state)
  return &next_state_;
}

// -------------------------------------------------------------------

// enb_transition

// optional uint64 tti = 1;
inline void enb_transition::clear_tti() {
  tti_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 enb_transition::tti() const {
  // @@protoc_insertion_point(field_get:ddrl.enb_transition.tti)
  return tti_;
}
inline void enb_transition::set_tti(::google::protobuf::uint64 value) {
  
  tti_ = value;
  // @@protoc_insertion_point(field_set:ddrl.enb_transition.tti)
}

// optional .google.protobuf.Timestamp timestamp = 2;
inline bool enb_transition::has_timestamp() const {
  return !_is_default_instance_ && timestamp_ != NULL;
}
inline void enb_transition::clear_timestamp() {
  if (GetArenaNoVirtual() == NULL && timestamp_ != NULL) delete timestamp_;
  timestamp_ = NULL;
}
inline const ::google::protobuf::Timestamp& enb_transition::timestamp() const {
  // @@protoc_insertion_point(field_get:ddrl.enb_transition.timestamp)
  return timestamp_ != NULL ? *timestamp_ : *default_instance_->timestamp_;
}
inline ::google::protobuf::Timestamp* enb_transition::mutable_timestamp() {
  
  if (timestamp_ == NULL) {
    timestamp_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:ddrl.enb_transition.timestamp)
  return timestamp_;
}
inline ::google::protobuf::Timestamp* enb_transition::release_timestamp() {
  // @@protoc_insertion_point(field_release:ddrl.enb_transition.timestamp)
  
  ::google::protobuf::Timestamp* temp = timestamp_;
  timestamp_ = NULL;
  return temp;
}
inline void enb_transition::set_allocated_timestamp(::google::protobuf::Timestamp* timestamp) {
  delete timestamp_;
  if (timestamp != NULL && timestamp->GetArena() != NULL) {
    ::google::protobuf::Timestamp* new_timestamp = new ::google::protobuf::Timestamp;
    new_timestamp->CopyFrom(*timestamp);
    timestamp = new_timestamp;
  }
  timestamp_ = timestamp;
  if (timestamp) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ddrl.enb_transition.timestamp)
}

// repeated .ddrl.ue_transition transition = 3;
inline int enb_transition::transition_size() const {
  return transition_.size();
}
inline void enb_transition::clear_transition() {
  transition_.Clear();
}
inline const ::ddrl::ue_transition& enb_transition::transition(int index) const {
  // @@protoc_insertion_point(field_get:ddrl.enb_transition.transition)
  return transition_.Get(index);
}
inline ::ddrl::ue_transition* enb_transition::mutable_transition(int index) {
  // @@protoc_insertion_point(field_mutable:ddrl.enb_transition.transition)
  return transition_.Mutable(index);
}
inline ::ddrl::ue_transition* enb_transition::add_transition() {
  // @@protoc_insertion_point(field_add:ddrl.enb_transition.transition)
  return transition_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ddrl::ue_transition >*
enb_transition::mutable_transition() {
  // @@protoc_insertion_point(field_mutable_list:ddrl.enb_transition.transition)
  return &transition_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ddrl::ue_transition >&
enb_transition::transition() const {
  // @@protoc_insertion_point(field_list:ddrl.enb_transition.transition)
  return transition_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace ddrl

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_transition_2eproto__INCLUDED
