// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: update_weight.proto

#ifndef PROTOBUF_update_5fweight_2eproto__INCLUDED
#define PROTOBUF_update_5fweight_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "nn_config.pb.h"
// @@protoc_insertion_point(includes)

namespace ddrl {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_update_5fweight_2eproto();
void protobuf_AssignDesc_update_5fweight_2eproto();
void protobuf_ShutdownFile_update_5fweight_2eproto();

class model_weight;
class update_model_weight;

// ===================================================================

class model_weight : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ddrl.model_weight) */ {
 public:
  model_weight();
  virtual ~model_weight();

  model_weight(const model_weight& from);

  inline model_weight& operator=(const model_weight& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const model_weight& default_instance();

  void Swap(model_weight* other);

  // implements Message ----------------------------------------------

  inline model_weight* New() const { return New(NULL); }

  model_weight* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const model_weight& from);
  void MergeFrom(const model_weight& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(model_weight* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 tensor_index = 1;
  void clear_tensor_index();
  static const int kTensorIndexFieldNumber = 1;
  ::google::protobuf::uint32 tensor_index() const;
  void set_tensor_index(::google::protobuf::uint32 value);

  // optional uint32 n_dim = 2;
  void clear_n_dim();
  static const int kNDimFieldNumber = 2;
  ::google::protobuf::uint32 n_dim() const;
  void set_n_dim(::google::protobuf::uint32 value);

  // optional uint32 x_index = 3;
  void clear_x_index();
  static const int kXIndexFieldNumber = 3;
  ::google::protobuf::uint32 x_index() const;
  void set_x_index(::google::protobuf::uint32 value);

  // optional uint32 y_index = 4;
  void clear_y_index();
  static const int kYIndexFieldNumber = 4;
  ::google::protobuf::uint32 y_index() const;
  void set_y_index(::google::protobuf::uint32 value);

  // optional float tau = 5;
  void clear_tau();
  static const int kTauFieldNumber = 5;
  float tau() const;
  void set_tau(float value);

  // optional float value = 6;
  void clear_value();
  static const int kValueFieldNumber = 6;
  float value() const;
  void set_value(float value);

  // @@protoc_insertion_point(class_scope:ddrl.model_weight)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 tensor_index_;
  ::google::protobuf::uint32 n_dim_;
  ::google::protobuf::uint32 x_index_;
  ::google::protobuf::uint32 y_index_;
  float tau_;
  float value_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_update_5fweight_2eproto();
  friend void protobuf_AssignDesc_update_5fweight_2eproto();
  friend void protobuf_ShutdownFile_update_5fweight_2eproto();

  void InitAsDefaultInstance();
  static model_weight* default_instance_;
};
// -------------------------------------------------------------------

class update_model_weight : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ddrl.update_model_weight) */ {
 public:
  update_model_weight();
  virtual ~update_model_weight();

  update_model_weight(const update_model_weight& from);

  inline update_model_weight& operator=(const update_model_weight& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const update_model_weight& default_instance();

  void Swap(update_model_weight* other);

  // implements Message ----------------------------------------------

  inline update_model_weight* New() const { return New(NULL); }

  update_model_weight* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const update_model_weight& from);
  void MergeFrom(const update_model_weight& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(update_model_weight* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional .ddrl.nn_config nn_config = 2;
  bool has_nn_config() const;
  void clear_nn_config();
  static const int kNnConfigFieldNumber = 2;
  const ::ddrl::nn_config& nn_config() const;
  ::ddrl::nn_config* mutable_nn_config();
  ::ddrl::nn_config* release_nn_config();
  void set_allocated_nn_config(::ddrl::nn_config* nn_config);

  // optional uint32 n_tensor_in_model = 3;
  void clear_n_tensor_in_model();
  static const int kNTensorInModelFieldNumber = 3;
  ::google::protobuf::uint32 n_tensor_in_model() const;
  void set_n_tensor_in_model(::google::protobuf::uint32 value);

  // repeated .ddrl.model_weight weight = 4;
  int weight_size() const;
  void clear_weight();
  static const int kWeightFieldNumber = 4;
  const ::ddrl::model_weight& weight(int index) const;
  ::ddrl::model_weight* mutable_weight(int index);
  ::ddrl::model_weight* add_weight();
  ::google::protobuf::RepeatedPtrField< ::ddrl::model_weight >*
      mutable_weight();
  const ::google::protobuf::RepeatedPtrField< ::ddrl::model_weight >&
      weight() const;

  // @@protoc_insertion_point(class_scope:ddrl.update_model_weight)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::ddrl::nn_config* nn_config_;
  ::google::protobuf::RepeatedPtrField< ::ddrl::model_weight > weight_;
  ::google::protobuf::uint32 n_tensor_in_model_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_update_5fweight_2eproto();
  friend void protobuf_AssignDesc_update_5fweight_2eproto();
  friend void protobuf_ShutdownFile_update_5fweight_2eproto();

  void InitAsDefaultInstance();
  static update_model_weight* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// model_weight

// optional uint32 tensor_index = 1;
inline void model_weight::clear_tensor_index() {
  tensor_index_ = 0u;
}
inline ::google::protobuf::uint32 model_weight::tensor_index() const {
  // @@protoc_insertion_point(field_get:ddrl.model_weight.tensor_index)
  return tensor_index_;
}
inline void model_weight::set_tensor_index(::google::protobuf::uint32 value) {
  
  tensor_index_ = value;
  // @@protoc_insertion_point(field_set:ddrl.model_weight.tensor_index)
}

// optional uint32 n_dim = 2;
inline void model_weight::clear_n_dim() {
  n_dim_ = 0u;
}
inline ::google::protobuf::uint32 model_weight::n_dim() const {
  // @@protoc_insertion_point(field_get:ddrl.model_weight.n_dim)
  return n_dim_;
}
inline void model_weight::set_n_dim(::google::protobuf::uint32 value) {
  
  n_dim_ = value;
  // @@protoc_insertion_point(field_set:ddrl.model_weight.n_dim)
}

// optional uint32 x_index = 3;
inline void model_weight::clear_x_index() {
  x_index_ = 0u;
}
inline ::google::protobuf::uint32 model_weight::x_index() const {
  // @@protoc_insertion_point(field_get:ddrl.model_weight.x_index)
  return x_index_;
}
inline void model_weight::set_x_index(::google::protobuf::uint32 value) {
  
  x_index_ = value;
  // @@protoc_insertion_point(field_set:ddrl.model_weight.x_index)
}

// optional uint32 y_index = 4;
inline void model_weight::clear_y_index() {
  y_index_ = 0u;
}
inline ::google::protobuf::uint32 model_weight::y_index() const {
  // @@protoc_insertion_point(field_get:ddrl.model_weight.y_index)
  return y_index_;
}
inline void model_weight::set_y_index(::google::protobuf::uint32 value) {
  
  y_index_ = value;
  // @@protoc_insertion_point(field_set:ddrl.model_weight.y_index)
}

// optional float tau = 5;
inline void model_weight::clear_tau() {
  tau_ = 0;
}
inline float model_weight::tau() const {
  // @@protoc_insertion_point(field_get:ddrl.model_weight.tau)
  return tau_;
}
inline void model_weight::set_tau(float value) {
  
  tau_ = value;
  // @@protoc_insertion_point(field_set:ddrl.model_weight.tau)
}

// optional float value = 6;
inline void model_weight::clear_value() {
  value_ = 0;
}
inline float model_weight::value() const {
  // @@protoc_insertion_point(field_get:ddrl.model_weight.value)
  return value_;
}
inline void model_weight::set_value(float value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:ddrl.model_weight.value)
}

// -------------------------------------------------------------------

// update_model_weight

// optional string name = 1;
inline void update_model_weight::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& update_model_weight::name() const {
  // @@protoc_insertion_point(field_get:ddrl.update_model_weight.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void update_model_weight::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ddrl.update_model_weight.name)
}
inline void update_model_weight::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ddrl.update_model_weight.name)
}
inline void update_model_weight::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ddrl.update_model_weight.name)
}
inline ::std::string* update_model_weight::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:ddrl.update_model_weight.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* update_model_weight::release_name() {
  // @@protoc_insertion_point(field_release:ddrl.update_model_weight.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void update_model_weight::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ddrl.update_model_weight.name)
}

// optional .ddrl.nn_config nn_config = 2;
inline bool update_model_weight::has_nn_config() const {
  return !_is_default_instance_ && nn_config_ != NULL;
}
inline void update_model_weight::clear_nn_config() {
  if (GetArenaNoVirtual() == NULL && nn_config_ != NULL) delete nn_config_;
  nn_config_ = NULL;
}
inline const ::ddrl::nn_config& update_model_weight::nn_config() const {
  // @@protoc_insertion_point(field_get:ddrl.update_model_weight.nn_config)
  return nn_config_ != NULL ? *nn_config_ : *default_instance_->nn_config_;
}
inline ::ddrl::nn_config* update_model_weight::mutable_nn_config() {
  
  if (nn_config_ == NULL) {
    nn_config_ = new ::ddrl::nn_config;
  }
  // @@protoc_insertion_point(field_mutable:ddrl.update_model_weight.nn_config)
  return nn_config_;
}
inline ::ddrl::nn_config* update_model_weight::release_nn_config() {
  // @@protoc_insertion_point(field_release:ddrl.update_model_weight.nn_config)
  
  ::ddrl::nn_config* temp = nn_config_;
  nn_config_ = NULL;
  return temp;
}
inline void update_model_weight::set_allocated_nn_config(::ddrl::nn_config* nn_config) {
  delete nn_config_;
  nn_config_ = nn_config;
  if (nn_config) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ddrl.update_model_weight.nn_config)
}

// optional uint32 n_tensor_in_model = 3;
inline void update_model_weight::clear_n_tensor_in_model() {
  n_tensor_in_model_ = 0u;
}
inline ::google::protobuf::uint32 update_model_weight::n_tensor_in_model() const {
  // @@protoc_insertion_point(field_get:ddrl.update_model_weight.n_tensor_in_model)
  return n_tensor_in_model_;
}
inline void update_model_weight::set_n_tensor_in_model(::google::protobuf::uint32 value) {
  
  n_tensor_in_model_ = value;
  // @@protoc_insertion_point(field_set:ddrl.update_model_weight.n_tensor_in_model)
}

// repeated .ddrl.model_weight weight = 4;
inline int update_model_weight::weight_size() const {
  return weight_.size();
}
inline void update_model_weight::clear_weight() {
  weight_.Clear();
}
inline const ::ddrl::model_weight& update_model_weight::weight(int index) const {
  // @@protoc_insertion_point(field_get:ddrl.update_model_weight.weight)
  return weight_.Get(index);
}
inline ::ddrl::model_weight* update_model_weight::mutable_weight(int index) {
  // @@protoc_insertion_point(field_mutable:ddrl.update_model_weight.weight)
  return weight_.Mutable(index);
}
inline ::ddrl::model_weight* update_model_weight::add_weight() {
  // @@protoc_insertion_point(field_add:ddrl.update_model_weight.weight)
  return weight_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ddrl::model_weight >*
update_model_weight::mutable_weight() {
  // @@protoc_insertion_point(field_mutable_list:ddrl.update_model_weight.weight)
  return &weight_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ddrl::model_weight >&
update_model_weight::weight() const {
  // @@protoc_insertion_point(field_list:ddrl.update_model_weight.weight)
  return weight_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace ddrl

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_update_5fweight_2eproto__INCLUDED
